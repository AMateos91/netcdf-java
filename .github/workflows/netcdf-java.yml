on: [pull_request]

jobs:
  tests-zulu:
    name: netCDF-Java Tests (Zulu JDK)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against latest 8 and 11
        java: [ 8, 11 ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - name: Install netCDF-C
        run: sudo apt update && sudo apt-get install libnetcdf-dev
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and test with Gradle
        run: ./gradlew --info --stacktrace testAll
        env:
          TRAVIS: 'true'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: netCDF-Java_JUnit_Results_${{ github.sha }}_Zulu-JDK-${{ matrix.java }}
          path: build/reports/allTests

  tests-adpotopenjdk-hs-8:
    name: netCDF-Java Tests (AdoptOpenJDK-HS 8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch latest AdoptOpenJDK 8 (hotspot) built for linux"
        run: curl -L "https://api.adoptopenjdk.net/v2/binary/releases/openjdk8?openjdk_impl=hotspot&arch=x64&release=latest&type=jdk&os=linux" -o aojdk8-hs.tar.gz
      - name: Setup Latest AdoptOpenJDK (hotspot) 8
        uses: actions/setup-java@master
        with:
          java-version: 8
          architecture: x64
          jdkFile: ./aojdk8-hs.tar.gz
      - name: Print java version
        run: java -version
      - name: Install netCDF-C
        run: sudo apt update && sudo apt-get install libnetcdf-dev
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and test with Gradle
        run: ./gradlew --info --stacktrace testAll
        env:
          TRAVIS: 'true'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: netCDF-Java_JUnit_Results_${{ github.sha }}_AdoptOpenJDK-HS-8
          path: build/reports/allTests

  tests-adpotopenjdk-hs-11:
    name: netCDF-Java Tests (AdoptOpenJDK-HS 11)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch latest AdoptOpenJDK 11 (hotspot) built for linux"
        run: curl -L "https://api.adoptopenjdk.net/v2/binary/releases/openjdk11?openjdk_impl=hotspot&arch=x64&release=latest&type=jdk&os=linux" -o aojdk11-hs.tar.gz
      - name: Setup Latest AdoptOpenJDK (hotspot) 11
        uses: actions/setup-java@master
        with:
          java-version: 11
          architecture: x64
          jdkFile: ./aojdk11-hs.tar.gz
      - name: Print java version
        run: java -version
      - name: Install netCDF-C
        run: sudo apt update && sudo apt-get install libnetcdf-dev
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and test with Gradle
        run: ./gradlew --info --stacktrace testAll
        env:
          TRAVIS: 'true'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: netCDF-Java_JUnit_Results_${{ github.sha }}_AdoptOpenJDK-HS-11
          path: build/reports/allTests

  spotless:
    name: Code Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Code Style Check with Gradle and Spotless
        run: ./gradlew clean spotlessCheck
